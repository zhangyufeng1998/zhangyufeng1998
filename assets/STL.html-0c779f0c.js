const e=JSON.parse('{"key":"v-4e800b60","path":"/posts/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/STL.html","title":"STL使用技巧","lang":"zh-CN","frontmatter":{"title":"STL使用技巧","date":"2023-06-01T00:00:00.000Z","icon":"bit","category":["数据结构","算法"],"description":"vector 变长数组，倍增的思想 系统为某一程序分配空间时，所需时间与空间大小无关，与申请次数有关 每一次容量不够的时候，就把原来的容量乘2，然后把原来的数据复制过来 size() 返回元素个数 empty() 返回是否为空 clear() 清空 print()/back() push_back()/pop_back() begin()/end()","head":[["meta",{"property":"og:url","content":"https://zhangyufeng19988.github.io/zyf/posts/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/STL.html"}],["meta",{"property":"og:title","content":"STL使用技巧"}],["meta",{"property":"og:description","content":"vector 变长数组，倍增的思想 系统为某一程序分配空间时，所需时间与空间大小无关，与申请次数有关 每一次容量不够的时候，就把原来的容量乘2，然后把原来的数据复制过来 size() 返回元素个数 empty() 返回是否为空 clear() 清空 print()/back() push_back()/pop_back() begin()/end()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ZYF"}],["meta",{"property":"article:published_time","content":"2023-06-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"STL使用技巧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYF\\",\\"url\\":\\"https://zhangyufeng19989.github.io\\",\\"email\\":\\"907392790@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"vector","slug":"vector","link":"#vector","children":[]},{"level":2,"title":"pair<int,int>","slug":"pair-int-int","link":"#pair-int-int","children":[]},{"level":2,"title":"string","slug":"string","link":"#string","children":[]},{"level":2,"title":"queue","slug":"queue","link":"#queue","children":[]},{"level":2,"title":"priority_queue","slug":"priority-queue","link":"#priority-queue","children":[]},{"level":2,"title":"stack","slug":"stack","link":"#stack","children":[]},{"level":2,"title":"deque","slug":"deque","link":"#deque","children":[]},{"level":2,"title":"set,map,multiset,mutimap","slug":"set-map-multiset-mutimap","link":"#set-map-multiset-mutimap","children":[]},{"level":2,"title":"unordered_set,unordered_map,unordered_multiset,unordered_multimap","slug":"unordered-set-unordered-map-unordered-multiset-unordered-multimap","link":"#unordered-set-unordered-map-unordered-multiset-unordered-multimap","children":[]},{"level":2,"title":"bitset","slug":"bitset","link":"#bitset","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.77,"words":830},"filePathRelative":"posts/算法基础/数据结构/STL.md","localizedDate":"2023年6月1日","excerpt":"<h2> <code>vector</code></h2>\\n<ul>\\n<li>变长数组，倍增的思想\\n<ul>\\n<li>系统为某一程序分配空间时，所需时间与空间大小无关，与申请次数有关</li>\\n<li>每一次容量不够的时候，就把原来的容量乘2，然后把原来的数据复制过来</li>\\n</ul>\\n</li>\\n<li><code>size()</code> 返回元素个数</li>\\n<li><code>empty()</code> 返回是否为空</li>\\n<li><code>clear()</code> 清空</li>\\n<li><code>print()</code>/<code>back()</code></li>\\n<li><code>push_back()</code>/<code>pop_back()</code></li>\\n<li><code>begin()</code>/<code>end()</code></li>\\n</ul>","autoDesc":true}');export{e as data};
