import{_ as n,X as s,Y as a,a2 as t}from"./framework-a8949fcd.js";const p={},e=t(`<h2 id="设置数据库" tabindex="-1"><a class="header-anchor" href="#设置数据库" aria-hidden="true">#</a> 设置数据库</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 用于存储文章数据</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span>
    articles<span class="token punctuation">(</span>
        id <span class="token keyword">SERIAL</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        title <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        content <span class="token keyword">text</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        <span class="token keyword">date</span> <span class="token keyword">date</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">,</span>
        <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 用于存储文章的评论数据</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span>
    comments<span class="token punctuation">(</span>
        id <span class="token keyword">SERIAL</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        user_id <span class="token keyword">integer</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        content <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        <span class="token keyword">date</span> <span class="token keyword">date</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">,</span>
        article <span class="token keyword">integer</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 用于存储使用 Github 登录过的用户信息</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span>
    users<span class="token punctuation">(</span>
        id <span class="token keyword">integer</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        avatar_url <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取文章并以json格式返回给客户端" tabindex="-1"><a class="header-anchor" href="#读取文章并以json格式返回给客户端" aria-hidden="true">#</a> 读取文章并以JSON格式返回给客户端</h2><h3 id="读取文章" tabindex="-1"><a class="header-anchor" href="#读取文章" aria-hidden="true">#</a> 读取文章</h3><ul><li>路由设计：GET/articles（获取所有文章）</li><li>用到的库： <ul><li>SQLx：数据库驱动，用于连接数据库</li><li>chrono：时间日期库，表里有一个date类型字段，用这个库来处理</li><li>serde和serde_json：<strong>序列化/反序列化</strong>的库，用于处理JSON <ul><li>序列化：把rust中的结构体vector等转化为JSON格式</li><li>反序列化：从JSON格式转化为rust中的数据结构</li></ul></li><li>dotenvy：读取.env文件，并把里面的键值加载进环境变量</li></ul></li><li>还要为<code>sqlx::Error</code>实现<code>From trait</code>以便为我们自定义的错误类型，方便错误处理</li></ul><h4 id="添加serve依赖" tabindex="-1"><a class="header-anchor" href="#添加serve依赖" aria-hidden="true">#</a> 添加serve依赖</h4><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">env_logger</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.10.0&quot;</span>
<span class="token key property">ntex</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.6.7&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;cookie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tokio&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token key property">chrono</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.4.19&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;serde&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token key property">dotenvy</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.15.7&quot;</span>
<span class="token key property">serde</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;1.0.130&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;derive&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token key property">serde_json</span> <span class="token punctuation">=</span> <span class="token string">&quot;1.0.68&quot;</span>
<span class="token key property">sqlx</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.9&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;postgres&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;macros&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;chrono&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;runtime-tokio-rustls&quot;</span>
<span class="token punctuation">]</span> <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="server根目录下创建-env文件" tabindex="-1"><a class="header-anchor" href="#server根目录下创建-env文件" aria-hidden="true">#</a> server根目录下创建.env文件</h4><div class="language-.env line-numbers-mode" data-ext=".env"><pre class="language-.env"><code>DATABASE_URL=postgres://postgres:123456@localhost:5432/blog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="在src文件夹下添加article和models文件夹" tabindex="-1"><a class="header-anchor" href="#在src文件夹下添加article和models文件夹" aria-hidden="true">#</a> 在src文件夹下添加article和models文件夹</h4><ul><li>article 目录下创建 <ul><li><code>mod.rs</code><ul><li><code>pub mod view;</code></li></ul></li><li><code>view.rs</code></li></ul></li><li>models 目录下创建 <ul><li><code>mod.rs</code><ul><li><code>pub mod article;</code></li></ul></li><li><code>article.rs</code></li></ul></li></ul><h5 id="编写article-rs" tabindex="-1"><a class="header-anchor" href="#编写article-rs" aria-hidden="true">#</a> 编写<code>article.rs</code></h5><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Dererialize</span><span class="token punctuation">,</span><span class="token class-name">Serialize</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug,Clone,)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Article</span><span class="token punctuation">{</span>
    <span class="token keyword">pub</span> id<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">u32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> date<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token namespace">chrono<span class="token punctuation">::</span></span><span class="token class-name">NaiveDate</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="编写view-rs" tabindex="-1"><a class="header-anchor" href="#编写view-rs" aria-hidden="true">#</a> 编写<code>view.rs</code></h5><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">ntex<span class="token punctuation">::</span>web<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token keyword">self</span><span class="token punctuation">,</span>
    <span class="token namespace">types<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Json</span><span class="token punctuation">,</span> <span class="token class-name">State</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>sync<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Arc</span><span class="token punctuation">,</span><span class="token class-name">Mutex</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span><span class="token punctuation">{</span><span class="token namespace">errors<span class="token punctuation">::</span></span><span class="token class-name">CustomError</span><span class="token punctuation">,</span><span class="token namespace">models<span class="token punctuation">::</span>article<span class="token punctuation">::</span></span><span class="token class-name">Article</span><span class="token punctuation">,</span><span class="token class-name">AppState</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/// 获取文章列表</span>
<span class="token attribute attr-name">#[web::get(<span class="token string">&quot;/articles&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_articles</span><span class="token punctuation">(</span>
    state<span class="token punctuation">:</span> <span class="token class-name">State</span><span class="token operator">&lt;</span><span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">AppState</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> <span class="token class-name">CustomError</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> db_pool <span class="token operator">=</span> <span class="token operator">&amp;</span>state<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>db_pool<span class="token punctuation">;</span>
    <span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token namespace">sqlx<span class="token punctuation">::</span></span><span class="token macro property">query!</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM articles&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">fetch_all</span><span class="token punctuation">(</span>db_pool<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token keyword">await</span><span class="token operator">?</span>
        <span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>i<span class="token closure-punctuation punctuation">|</span></span> <span class="token class-name">Article</span> <span class="token punctuation">{</span>
            id<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>id <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            title<span class="token punctuation">:</span> i<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            content<span class="token punctuation">:</span> i<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            date<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token class-name">Json</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="修改main-rs" tabindex="-1"><a class="header-anchor" href="#修改main-rs" aria-hidden="true">#</a> 修改<code>main.rs</code></h5><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">mod</span> <span class="token module-declaration namespace">errors</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">models</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">article</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">article<span class="token punctuation">::</span></span>view<span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>errors<span class="token punctuation">::</span></span><span class="token class-name">CustomError</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">sqlx<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">postgres<span class="token punctuation">::</span></span><span class="token class-name">PgPoolOptions</span><span class="token punctuation">,</span> <span class="token class-name">Pool</span><span class="token punctuation">,</span> <span class="token class-name">Postgres</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">ntex<span class="token punctuation">::</span>web<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> middleware<span class="token punctuation">,</span> <span class="token class-name">App</span><span class="token punctuation">,</span> <span class="token class-name">HttpServer</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>env<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>sync<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Arc</span><span class="token punctuation">,</span> <span class="token class-name">Mutex</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug, Clone)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">AppState</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> db_pool<span class="token punctuation">:</span> <span class="token class-name">Pool</span><span class="token operator">&lt;</span><span class="token class-name">Postgres</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>  <span class="token comment">// 数据库连接池</span>
<span class="token punctuation">}</span>


<span class="token attribute attr-name">#[ntex::main]</span>  <span class="token comment">// 标记为异步的main函数</span>
<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token namespace">dotenvy<span class="token punctuation">::</span></span><span class="token function">dotenv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 读取.env文件</span>
    <span class="token namespace">env<span class="token punctuation">::</span></span><span class="token function">set_var</span><span class="token punctuation">(</span><span class="token string">&quot;RUST_LOG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ntex=info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// set the environment variable RUST_LOG to ntex=info</span>
    <span class="token namespace">env_logger<span class="token punctuation">::</span></span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// initialize the logger</span>

    <span class="token keyword">let</span> db_url <span class="token operator">=</span> <span class="token namespace">env<span class="token punctuation">::</span></span><span class="token function">var</span><span class="token punctuation">(</span><span class="token string">&quot;DATABASE_URL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Please set \`DATABASE_URL\`&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// get the value of the environment variable DATABASE_URL</span>

    <span class="token comment">// State</span>
    <span class="token keyword">let</span> app_state <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">AppState</span> <span class="token punctuation">{</span>
        db_pool<span class="token punctuation">:</span> <span class="token class-name">PgPoolOptions</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">max_connections</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>db_url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token keyword">await</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">HttpServer</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>app_state<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token namespace">middleware<span class="token punctuation">::</span></span><span class="token class-name">Logger</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token namespace">view<span class="token punctuation">::</span></span>get_articles<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">&quot;0.0.0.0:12345&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token keyword">await</span>
        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","2.html.vue"]]);export{k as default};
