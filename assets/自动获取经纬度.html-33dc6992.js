import{_ as n,X as s,Y as a,a2 as t}from"./framework-a8949fcd.js";const p={},o=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time

<span class="token keyword">import</span> requests
<span class="token keyword">def</span> <span class="token function">get_coordinates</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 延时</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>
    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://apis.map.qq.com/ws/geocoder/v1/?address=</span><span class="token interpolation"><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token string">&amp;key=C4KBZ-VXMCL-RJFPO-EJKC7-PJLMF-OZBXO&quot;</span></span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        location <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;location&#39;</span><span class="token punctuation">]</span>
        lat <span class="token operator">=</span> location<span class="token punctuation">[</span><span class="token string">&#39;lat&#39;</span><span class="token punctuation">]</span>
        lon <span class="token operator">=</span> location<span class="token punctuation">[</span><span class="token string">&#39;lng&#39;</span><span class="token punctuation">]</span>
        similarity <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;similarity&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> lat<span class="token punctuation">,</span> lon<span class="token punctuation">,</span> similarity
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span>
<span class="token comment"># address = &quot;天津市红桥区西青道华润万家1011.1013.1015&quot;</span>
<span class="token comment"># lat, lon = get_coordinates(address)</span>
<span class="token comment"># 按行读取1.txt中的address</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span> <span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        address <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        lat<span class="token punctuation">,</span> lon <span class="token punctuation">,</span>s<span class="token operator">=</span> get_coordinates<span class="token punctuation">(</span>address<span class="token punctuation">)</span>
        <span class="token keyword">if</span> lat <span class="token keyword">and</span> lon<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;The coordinates for </span><span class="token interpolation"><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token string"> are: </span><span class="token interpolation"><span class="token punctuation">{</span>lat<span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span>lon<span class="token punctuation">}</span></span><span class="token string">, similarity:</span><span class="token interpolation"><span class="token punctuation">{</span>s<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Unable to retrieve coordinates for </span><span class="token interpolation"><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>get_coordinates<span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","自动获取经纬度.html.vue"]]);export{r as default};
