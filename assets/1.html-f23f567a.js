import{_ as n,X as s,Y as a,a2 as t}from"./framework-a8949fcd.js";const p={},e=t(`<h2 id="错误处理思路" tabindex="-1"><a class="header-anchor" href="#错误处理思路" aria-hidden="true">#</a> 错误处理思路</h2><ul><li><code>Handlers</code>都返回<code>Result&lt;T,E&gt;</code>类型，T是响应内容（OK），E是我们自定义的错误类型，它们的类型要可以被ntex作为响应返回给客户端（实现Responder或WebResponseError trait）</li><li>E是一个枚举，包含了程序中可能出现的错误以及具体的描述信息</li><li>我们要为这个枚举实现<code>WebResponseError</code>这个trait，以便把ntex把自定义错误类型转化为HTTP响应并附上对应的状态码（还要实现Display trait）</li></ul><h3 id="简单实现" tabindex="-1"><a class="header-anchor" href="#简单实现" aria-hidden="true">#</a> 简单实现</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>fmt<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">ntex<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token namespace">http<span class="token punctuation">::</span></span><span class="token class-name">StatusCode</span><span class="token punctuation">,</span>
    <span class="token namespace">web<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">HttpResponse</span><span class="token punctuation">,</span> <span class="token class-name">WebResponseError</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug, Clone)]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">CustomError</span> <span class="token punctuation">{</span>
    <span class="token class-name">NotFound</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">InternalServerError</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">WebResponseError</span> <span class="token keyword">for</span> <span class="token class-name">CustomError</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">status_code</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">StatusCode</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> <span class="token keyword">self</span> <span class="token punctuation">{</span>
            <span class="token class-name">CustomError</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">StatusCode</span><span class="token punctuation">::</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">,</span>
            <span class="token class-name">CustomError</span><span class="token punctuation">::</span><span class="token class-name">InternalServerError</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">StatusCode</span><span class="token punctuation">::</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">error_response</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> _<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token namespace">ntex<span class="token punctuation">::</span>web<span class="token punctuation">::</span></span><span class="token class-name">HttpRequest</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">HttpResponse</span> <span class="token punctuation">{</span>
        <span class="token class-name">HttpResponse</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">status_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set_body</span><span class="token punctuation">(</span>
            <span class="token keyword">match</span> <span class="token keyword">self</span> <span class="token punctuation">{</span>
                <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">,</span>
                <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">InternalServerError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Display</span> <span class="token keyword">for</span> <span class="token class-name">CustomError</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">fmt</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Formatter</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Result</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> <span class="token keyword">self</span> <span class="token punctuation">{</span>
            <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">write!</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">&quot;Not Found: {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">InternalServerError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">write!</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">&quot;Internal Server Error: {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","1.html.vue"]]);export{k as default};
