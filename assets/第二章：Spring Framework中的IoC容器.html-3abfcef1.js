const e=JSON.parse('{"key":"v-6bc97228","path":"/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%AD%A6%E9%80%8FSpring/%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9ASpring%20Framework%E4%B8%AD%E7%9A%84IoC%E5%AE%B9%E5%99%A8.html","title":"第二章：Spring Framework中的IoC容器","lang":"zh-CN","frontmatter":{"title":"第二章：Spring Framework中的IoC容器","desctiption":"Spring","date":"2023-05-08T00:00:00.000Z","icon":"java","category":["读书笔记","Java","Spring","学透Spring"],"description":"2.1 IoC容器基础知识 什么是IoC容器 控制反转（Inversion of Control，IoC） 控制反转是一种决定容器如何装配组件的模式，容器就是创建组件并对他们进行管理的地方，它牵扯到组件该如何定义、组件该何时创建、又该何时销毁、它们互相之间是什么关系等。这些本应该在组件内部管理的东西，被从组件中剥离出来。 所有组件都要被动接受容器的控制 依赖注入（Dependency Injection）可以更好的对控制反转进行描述","head":[["meta",{"property":"og:url","content":"https://zhangyufeng19988.github.io/zyf/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%AD%A6%E9%80%8FSpring/%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9ASpring%20Framework%E4%B8%AD%E7%9A%84IoC%E5%AE%B9%E5%99%A8.html"}],["meta",{"property":"og:title","content":"第二章：Spring Framework中的IoC容器"}],["meta",{"property":"og:description","content":"2.1 IoC容器基础知识 什么是IoC容器 控制反转（Inversion of Control，IoC） 控制反转是一种决定容器如何装配组件的模式，容器就是创建组件并对他们进行管理的地方，它牵扯到组件该如何定义、组件该何时创建、又该何时销毁、它们互相之间是什么关系等。这些本应该在组件内部管理的东西，被从组件中剥离出来。 所有组件都要被动接受容器的控制 依赖注入（Dependency Injection）可以更好的对控制反转进行描述"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-22T03:59:03.000Z"}],["meta",{"property":"article:author","content":"ZYF"}],["meta",{"property":"article:published_time","content":"2023-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-22T03:59:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二章：Spring Framework中的IoC容器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-22T03:59:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYF\\",\\"url\\":\\"https://zhangyufeng19989.github.io\\",\\"email\\":\\"907392790@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"2.1 IoC容器基础知识","slug":"_2-1-ioc容器基础知识","link":"#_2-1-ioc容器基础知识","children":[{"level":3,"title":"什么是IoC容器","slug":"什么是ioc容器","link":"#什么是ioc容器","children":[]},{"level":3,"title":"容器的初始化","slug":"容器的初始化","link":"#容器的初始化","children":[]},{"level":3,"title":"BeanFactory与ApplicationContext","slug":"beanfactory与applicationcontext","link":"#beanfactory与applicationcontext","children":[]},{"level":3,"title":"容器的继承关系","slug":"容器的继承关系","link":"#容器的继承关系","children":[]}]},{"level":2,"title":"2.2 Bean基础知识","slug":"_2-2-bean基础知识","link":"#_2-2-bean基础知识","children":[{"level":3,"title":"什么是Bean","slug":"什么是bean","link":"#什么是bean","children":[]},{"level":3,"title":"Bean的依赖关系","slug":"bean的依赖关系","link":"#bean的依赖关系","children":[]},{"level":3,"title":"Bean的三种配置方式","slug":"bean的三种配置方式","link":"#bean的三种配置方式","children":[]}]},{"level":2,"title":"2.3 定制容器与Bean的行为","slug":"_2-3-定制容器与bean的行为","link":"#_2-3-定制容器与bean的行为","children":[]},{"level":2,"title":"2.4 容器中的几种抽象","slug":"_2-4-容器中的几种抽象","link":"#_2-4-容器中的几种抽象","children":[]}],"git":{"createdTime":1684727943000,"updatedTime":1684727943000,"contributors":[{"name":"zyf","email":"907392790@qq.com","commits":1}]},"readingTime":{"minutes":5.03,"words":1510},"filePathRelative":"posts/读书笔记/学透Spring/第二章：Spring Framework中的IoC容器.md","localizedDate":"2023年5月8日","excerpt":"<h2> 2.1 IoC容器基础知识</h2>\\n<h3> 什么是IoC容器</h3>\\n<p>控制反转（Inversion of Control，IoC）</p>\\n<p><mark>控制反转</mark>是一种决定容器如何装配组件的模式，<mark>容器</mark>就是创建组件并对他们进行管理的地方，它牵扯到组件该如何定义、组件该何时创建、又该何时销毁、它们互相之间是什么关系等。这些本应该在组件内部管理的东西，被从组件中剥离出来。</p>\\n<p>所有组件都要被动接受容器的控制</p>\\n<p><mark>依赖注入</mark>（Dependency Injection）可以更好的对控制反转进行描述</p>","autoDesc":true}');export{e as data};
