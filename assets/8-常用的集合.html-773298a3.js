const e=JSON.parse('{"key":"v-75ecaa80","path":"/posts/rust/rust%E5%85%A5%E9%97%A8/8-%E5%B8%B8%E7%94%A8%E7%9A%84%E9%9B%86%E5%90%88.html","title":"8.常用的集合","lang":"zh-CN","frontmatter":{"title":"8.常用的集合","date":"2023-05-12T00:00:00.000Z","icon":"rust","category":"rust","description":"存储在堆内存上，数据大小无需在编译的时候确定，可以动态的变大或者变小 8.1 Vector Vec&lt;T&gt;,叫做vector 由标准库提供 可存储多个值 只能存储相同类型的数据 值在内存中连续存放 创建Vector Vec::new 函数 let v: Vec&lt;i32&gt; = Vec::new(); 使用初始值创建Vec&lt;T&gt;（比较常用）,使用vec!宏 let v = vec![1,2,3];","head":[["meta",{"property":"og:url","content":"https://zhangyufeng19988.github.io/zyf/posts/rust/rust%E5%85%A5%E9%97%A8/8-%E5%B8%B8%E7%94%A8%E7%9A%84%E9%9B%86%E5%90%88.html"}],["meta",{"property":"og:title","content":"8.常用的集合"}],["meta",{"property":"og:description","content":"存储在堆内存上，数据大小无需在编译的时候确定，可以动态的变大或者变小 8.1 Vector Vec&lt;T&gt;,叫做vector 由标准库提供 可存储多个值 只能存储相同类型的数据 值在内存中连续存放 创建Vector Vec::new 函数 let v: Vec&lt;i32&gt; = Vec::new(); 使用初始值创建Vec&lt;T&gt;（比较常用）,使用vec!宏 let v = vec![1,2,3];"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-22T03:59:03.000Z"}],["meta",{"property":"article:author","content":"ZYF"}],["meta",{"property":"article:published_time","content":"2023-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-22T03:59:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.常用的集合\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-22T03:59:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYF\\",\\"url\\":\\"https://zhangyufeng19989.github.io\\",\\"email\\":\\"907392790@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"8.1 Vector","slug":"_8-1-vector","link":"#_8-1-vector","children":[{"level":3,"title":"创建Vector","slug":"创建vector","link":"#创建vector","children":[]},{"level":3,"title":"添加元素","slug":"添加元素","link":"#添加元素","children":[]},{"level":3,"title":"删除Vector","slug":"删除vector","link":"#删除vector","children":[]},{"level":3,"title":"读取Vector的元素","slug":"读取vector的元素","link":"#读取vector的元素","children":[]},{"level":3,"title":"索引 对比 get 处理访问越界","slug":"索引-对比-get-处理访问越界","link":"#索引-对比-get-处理访问越界","children":[]},{"level":3,"title":"所有权和借用规则","slug":"所有权和借用规则","link":"#所有权和借用规则","children":[]},{"level":3,"title":"遍历Vector中的值","slug":"遍历vector中的值","link":"#遍历vector中的值","children":[]}]},{"level":2,"title":"8.2 Vector例子","slug":"_8-2-vector例子","link":"#_8-2-vector例子","children":[{"level":3,"title":"使用枚举来存储多种数据类型","slug":"使用枚举来存储多种数据类型","link":"#使用枚举来存储多种数据类型","children":[]}]},{"level":2,"title":"8.3 String （上）","slug":"_8-3-string-上","link":"#_8-3-string-上","children":[{"level":3,"title":"Rust开发正经常会被字符串困扰","slug":"rust开发正经常会被字符串困扰","link":"#rust开发正经常会被字符串困扰","children":[]},{"level":3,"title":"字符串是什么","slug":"字符串是什么","link":"#字符串是什么","children":[]},{"level":3,"title":"通常说的字符串是指","slug":"通常说的字符串是指","link":"#通常说的字符串是指","children":[]},{"level":3,"title":"其它字符串类型","slug":"其它字符串类型","link":"#其它字符串类型","children":[]},{"level":3,"title":"创建一个新的字符串（String）","slug":"创建一个新的字符串-string","link":"#创建一个新的字符串-string","children":[]},{"level":3,"title":"更新String","slug":"更新string","link":"#更新string","children":[]}]},{"level":2,"title":"8.4 String(下)","slug":"_8-4-string-下","link":"#_8-4-string-下","children":[{"level":3,"title":"对String按索引的形式进行访问","slug":"对string按索引的形式进行访问","link":"#对string按索引的形式进行访问","children":[]},{"level":3,"title":"内部表示","slug":"内部表示","link":"#内部表示","children":[]},{"level":3,"title":"字节、标量值、字形簇","slug":"字节、标量值、字形簇","link":"#字节、标量值、字形簇","children":[]},{"level":3,"title":"切割String","slug":"切割string","link":"#切割string","children":[]},{"level":3,"title":"遍历String的方法","slug":"遍历string的方法","link":"#遍历string的方法","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"8.5 HashMap（上）","slug":"_8-5-hashmap-上","link":"#_8-5-hashmap-上","children":[{"level":3,"title":"HashMap<K,V>","slug":"hashmap-k-v","link":"#hashmap-k-v","children":[]},{"level":3,"title":"创建HashMap","slug":"创建hashmap","link":"#创建hashmap","children":[]},{"level":3,"title":"使用collet方法创建HashMap","slug":"使用collet方法创建hashmap","link":"#使用collet方法创建hashmap","children":[]},{"level":3,"title":"HashMap 和所有权","slug":"hashmap-和所有权","link":"#hashmap-和所有权","children":[]},{"level":3,"title":"访问HashMap中的值","slug":"访问hashmap中的值","link":"#访问hashmap中的值","children":[]},{"level":3,"title":"遍历HashMap","slug":"遍历hashmap","link":"#遍历hashmap","children":[]}]},{"level":2,"title":"HashMap(下)","slug":"hashmap-下","link":"#hashmap-下","children":[{"level":3,"title":"更新HashMap","slug":"更新hashmap","link":"#更新hashmap","children":[]},{"level":3,"title":"替换现有的V","slug":"替换现有的v","link":"#替换现有的v","children":[]},{"level":3,"title":"只在K不对应任何值的情况下，才插入V","slug":"只在k不对应任何值的情况下-才插入v","link":"#只在k不对应任何值的情况下-才插入v","children":[]},{"level":3,"title":"基于现有V更新V","slug":"基于现有v更新v","link":"#基于现有v更新v","children":[]},{"level":3,"title":"Hash函数","slug":"hash函数","link":"#hash函数","children":[]}]}],"git":{"createdTime":1684727943000,"updatedTime":1684727943000,"contributors":[{"name":"zyf","email":"907392790@qq.com","commits":1}]},"readingTime":{"minutes":7.53,"words":2260},"filePathRelative":"posts/rust/rust入门/8-常用的集合.md","localizedDate":"2023年5月12日","excerpt":"<p>存储在堆内存上，数据大小无需在编译的时候确定，可以动态的变大或者变小</p>\\n<h2> 8.1 Vector</h2>\\n<ul>\\n<li><code>Vec&lt;T&gt;</code>,叫做vector\\n<ul>\\n<li>由标准库提供</li>\\n<li>可存储多个值</li>\\n<li>只能存储相同类型的数据</li>\\n<li>值在内存中连续存放</li>\\n</ul>\\n</li>\\n</ul>\\n<h3> 创建Vector</h3>\\n<ul>\\n<li><code>Vec::new</code> 函数\\n<ul>\\n<li><code>let v: Vec&lt;i32&gt; = Vec::new();</code></li>\\n</ul>\\n</li>\\n<li>使用初始值创建<code>Vec&lt;T&gt;</code>（比较常用）,使用<code>vec!</code>宏\\n<ul>\\n<li><code>let v = vec![1,2,3];</code></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
