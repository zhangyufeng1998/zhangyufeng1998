const l=JSON.parse('{"key":"v-4596bcff","path":"/posts/rust/rust%E5%85%A5%E9%97%A8/15-.html","title":"15.智能指针","lang":"zh-CN","frontmatter":{"title":"15.智能指针","date":"2023-05-23T00:00:00.000Z","icon":"rust","category":"rust","description":"相关概念 指针:一个变量在内存中包含的是一个地址(指向其他数据) Rust中在常见的指针就是引用 引用: 使用符号&amp;表示 表示借用它指向的值 没有其余开销 最常见的指针类型 智能指针 智能指针是这样一些数据结构 行为和指针相似 有额外的元数据和功能","head":[["meta",{"property":"og:url","content":"https://zhangyufeng19988.github.io/zyf/posts/rust/rust%E5%85%A5%E9%97%A8/15-.html"}],["meta",{"property":"og:title","content":"15.智能指针"}],["meta",{"property":"og:description","content":"相关概念 指针:一个变量在内存中包含的是一个地址(指向其他数据) Rust中在常见的指针就是引用 引用: 使用符号&amp;表示 表示借用它指向的值 没有其余开销 最常见的指针类型 智能指针 智能指针是这样一些数据结构 行为和指针相似 有额外的元数据和功能"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ZYF"}],["meta",{"property":"article:published_time","content":"2023-05-23T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"15.智能指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYF\\",\\"url\\":\\"https://zhangyufeng19989.github.io\\",\\"email\\":\\"907392790@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"相关概念","slug":"相关概念","link":"#相关概念","children":[{"level":3,"title":"智能指针","slug":"智能指针","link":"#智能指针","children":[]},{"level":3,"title":"引用计数(reference counting)智能指针类型","slug":"引用计数-reference-counting-智能指针类型","link":"#引用计数-reference-counting-智能指针类型","children":[]},{"level":3,"title":"引用和智能指针的其他不同","slug":"引用和智能指针的其他不同","link":"#引用和智能指针的其他不同","children":[]},{"level":3,"title":"智能指针的例子","slug":"智能指针的例子","link":"#智能指针的例子","children":[]},{"level":3,"title":"智能指针的实现","slug":"智能指针的实现","link":"#智能指针的实现","children":[]},{"level":3,"title":"标准库常见的智能指针","slug":"标准库常见的智能指针","link":"#标准库常见的智能指针","children":[]}]},{"level":2,"title":"15.1 使用 Box<T>来指向Heap上的数据","slug":"_15-1-使用-box-t-来指向heap上的数据","link":"#_15-1-使用-box-t-来指向heap上的数据","children":[{"level":3,"title":"Box<T>","slug":"box-t","link":"#box-t","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"使用Box赋能递归类型","slug":"使用box赋能递归类型","link":"#使用box赋能递归类型","children":[]},{"level":3,"title":"关于Cons List","slug":"关于cons-list","link":"#关于cons-list","children":[]},{"level":3,"title":"Cons List 并不是Rust的常用集合","slug":"cons-list-并不是rust的常用集合","link":"#cons-list-并不是rust的常用集合","children":[]},{"level":3,"title":"使用Box来获得确定大小的递归类型","slug":"使用box来获得确定大小的递归类型","link":"#使用box来获得确定大小的递归类型","children":[]}]},{"level":2,"title":"15.2 Deref trait","slug":"_15-2-deref-trait","link":"#_15-2-deref-trait","children":[{"level":3,"title":"Deref Trait","slug":"deref-trait","link":"#deref-trait","children":[]},{"level":3,"title":"解引用运算符","slug":"解引用运算符","link":"#解引用运算符","children":[]},{"level":3,"title":"把Box<T>当作引用","slug":"把box-t-当作引用","link":"#把box-t-当作引用","children":[]},{"level":3,"title":"定义自己的智能指针","slug":"定义自己的智能指针","link":"#定义自己的智能指针","children":[]},{"level":3,"title":"实现Deref Trait","slug":"实现deref-trait","link":"#实现deref-trait","children":[]}]},{"level":2,"title":"15.2 Deref Trait(2)","slug":"_15-2-deref-trait-2","link":"#_15-2-deref-trait-2","children":[{"level":3,"title":"函数和方法的隐式解引用转化(Deref Coercion)","slug":"函数和方法的隐式解引用转化-deref-coercion","link":"#函数和方法的隐式解引用转化-deref-coercion","children":[]},{"level":3,"title":"解引用与可变性","slug":"解引用与可变性","link":"#解引用与可变性","children":[]}]},{"level":2,"title":"15.3 Drop Trait","slug":"_15-3-drop-trait","link":"#_15-3-drop-trait","children":[{"level":3,"title":"Drop Trait","slug":"drop-trait","link":"#drop-trait","children":[]},{"level":3,"title":"使用std::mem::drop来提前drop值","slug":"使用std-mem-drop来提前drop值","link":"#使用std-mem-drop来提前drop值","children":[]}]},{"level":2,"title":"15.4 Rc<T>引用计数智能指针","slug":"_15-4-rc-t-引用计数智能指针","link":"#_15-4-rc-t-引用计数智能指针","children":[{"level":3,"title":"Rc<T>引用计数智能指针","slug":"rc-t-引用计数智能指针","link":"#rc-t-引用计数智能指针","children":[]},{"level":3,"title":"Rc<T>使用场景","slug":"rc-t-使用场景","link":"#rc-t-使用场景","children":[]},{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":3,"title":"Rc::clone()对比类型的clone()方法","slug":"rc-clone-对比类型的clone-方法","link":"#rc-clone-对比类型的clone-方法","children":[]},{"level":3,"title":"Rc<T>","slug":"rc-t","link":"#rc-t","children":[]}]},{"level":2,"title":"15.5 RefCell<T>和内部可变性","slug":"_15-5-refcell-t-和内部可变性","link":"#_15-5-refcell-t-和内部可变性","children":[{"level":3,"title":"内部可变性(interior mutability)","slug":"内部可变性-interior-mutability","link":"#内部可变性-interior-mutability","children":[]},{"level":3,"title":"RefCell<T>","slug":"refcell-t","link":"#refcell-t","children":[]},{"level":3,"title":"RefCell<T>和Box<T>的区别","slug":"refcell-t-和box-t-的区别","link":"#refcell-t-和box-t-的区别","children":[]},{"level":3,"title":"选择Box<T> Rc<T> RefCell<T>的依据","slug":"选择box-t-rc-t-refcell-t-的依据","link":"#选择box-t-rc-t-refcell-t-的依据","children":[]},{"level":3,"title":"内部可变性:可变的借用一个不可变的值","slug":"内部可变性-可变的借用一个不可变的值","link":"#内部可变性-可变的借用一个不可变的值","children":[]},{"level":3,"title":"使用RefCell<T>在运行时记录借用信息","slug":"使用refcell-t-在运行时记录借用信息","link":"#使用refcell-t-在运行时记录借用信息","children":[]},{"level":3,"title":"将Rc<T>和RefCell<T>结合使用来实现一个拥有多重所有权的可变数据","slug":"将rc-t-和refcell-t-结合使用来实现一个拥有多重所有权的可变数据","link":"#将rc-t-和refcell-t-结合使用来实现一个拥有多重所有权的可变数据","children":[]},{"level":3,"title":"其他可实现内部可变性的类型","slug":"其他可实现内部可变性的类型","link":"#其他可实现内部可变性的类型","children":[]}]},{"level":2,"title":"15.6 循环引用可导致内存泄漏","slug":"_15-6-循环引用可导致内存泄漏","link":"#_15-6-循环引用可导致内存泄漏","children":[{"level":3,"title":"Rust可能发生内存泄漏","slug":"rust可能发生内存泄漏","link":"#rust可能发生内存泄漏","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.43,"words":2828},"filePathRelative":"posts/rust/rust入门/15-.md","localizedDate":"2023年5月23日","excerpt":"<h2> 相关概念</h2>\\n<ul>\\n<li>指针:一个变量在内存中包含的是一个地址(指向其他数据)</li>\\n<li>Rust中在常见的指针就是<strong>引用</strong></li>\\n<li>引用:\\n<ul>\\n<li>使用符号<code>&amp;</code>表示</li>\\n<li>表示借用它指向的值</li>\\n<li>没有其余开销</li>\\n<li>最常见的指针类型</li>\\n</ul>\\n</li>\\n</ul>\\n<h3> 智能指针</h3>\\n<ul>\\n<li>智能指针是这样一些数据结构\\n<ul>\\n<li>行为和指针相似</li>\\n<li>有额外的元数据和功能</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{l as data};
